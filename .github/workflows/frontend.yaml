name: Build-Deploy-Preprod-Frontend
on:
  workflow_dispatch:
  push:
    paths:
      - frontend/**
      - .github/workflows/frontend.yaml
    branches:
      - main

jobs:
  build-frontend-docker:
    #    if: github.event.pull_request.draft == false
    name: Bygg app/image, push til github
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sette opp pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Sette opp node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          scope: "@navikt"
          registry-url: https://npm.pkg.github.com/
          cache-dependency-path: frontend
          cache: "pnpm"

      - name: Installere dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bygg app
        working-directory: frontend
        run: pnpm run build

      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: tilbake
          image_suffix: frontend
          push_image: true
          tag: ${{ github.sha }}
          docker_context: ./frontend
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  deploy-to-dev:
    name: Deploy til dev-gcp
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    needs: [build-frontend-docker]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: frontend/nais/application.yaml
          VAR: image=${{ needs.build-frontend-docker.outputs.image }}
          ENVIRONMENT: dev-gcp:tilbake
